syntax = "proto3";
package stanza.hub.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "stanza/hub/v1;hubpb";
option java_multiple_files = true;
option java_package = "org.stanza.hub.v1";

// This protocol buffer definition is the source of truth for the Stanza Hub Auth API.
// There is also an OpenAPI spec, generated via https://github.com/grpc-ecosystem/grpc-gateway.
//
// This module supports authentication and authorization via Bearer Tokens.

service AuthService {
  rpc GetBearerToken(GetBearerTokenRequest) returns (GetBearerTokenResponse) {
    option (google.api.http) = {get: "/v1/auth/token"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get Bearer Token"
      description: "Inspects the X-Stanza-Key auth header and returns a new Bearer Token if API key is valid."
      responses: {
        key: "200"
        value: {
          description: "OK",
          schema: {
            json_schema: {ref: ".stanza.hub.v1.GetBearerTokenResponse"}
          }
        }
      }
    };
  }
}

// GetBearerTokenRequest is empty, please pass your API key via a X-Stanza-Key header.
message GetBearerTokenRequest {
  string environment = 1; // Must be specified.
}

// GetBearerTokenResponse is a new Bearer Token.
message GetBearerTokenResponse {
  string bearer_token = 1;
}
